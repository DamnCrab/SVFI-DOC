import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as i,c as r,b as e,d as a,a as t,w as o,e as l}from"./app-06f97768.js";const c={},d={class:"hint-container warning"},v=e("p",{class:"hint-container-title"},"注意",-1),m=l(`<p>SVFI 支持使用命令行调用</p><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><ol><li>在SVFI安装根目录新建<code>steam_appid.txt</code>，填写如下内容</li></ol><blockquote><p>1692080</p></blockquote><div class="hint-container tip"><p class="hint-container-title">提示</p><p>填写该文本文件将使SVFI以独立应用程序模式启动，以避免Steam客户端的干扰。</p><p>可实现软件多开、软件安装位置迁移等特殊操作。</p></div><ol start="2"><li>在SVFI安装根目录启动命令提示符<code>cmd</code>（若安装位置不在系统盘，则无需管理员权限），输入<code>one_line_shot_args.exe -h</code>并回车，应能够看到以下类似内容：</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>usage: #### SVFI CLI tool by Jeanna #### [-h] -i INPUT -c CONFIG -t TASK_ID
                                         [--concat-only] [--extract-only]
                                         [--render-only] [-p] [--pipe-in]
                                         [--pipe-out]
                                         [--pipe-iw PIPE_IN_WIDTH]
                                         [--pipe-ih PIPE_IN_HEIGHT]
                                         [--pipe-in-fps PIPE_IN_FPS]
                                         [--pipe-in-pixfmt {rgb24,rgb48be,rgb48le,rgb48}]
                                         [--pipe-rgb]
                                         [--pipe-colormatrix {470bg,170m,2020ncl,709}]

To enhance Long video/image sequence quality

optional arguments:
  -h, --help            show this help message and exit

Basic Settings:
  -i INPUT, --input INPUT
                        Path of input video/image sequence folder
  -c CONFIG, --config CONFIG
                        Path of config
  -t TASK_ID, --task-id TASK_ID
                        13-digit Task id
  --concat-only         Concat Chunk only
  --extract-only        Extract input to frames Only
  --render-only         Render only
  -p, --preview         Preview Settings

Pipe Settings:
  Set the follow parameters when &#39;-mid&#39; is assigned, or you will encounter
  exceptions.Output Y4M at YUV444P10

  --pipe-in             This enables OLS to obtain input data from stdin
  --pipe-out            This enables OLS to pipe output to stdout
  --pipe-iw PIPE_IN_WIDTH
                        Width of input raw RGB, effective when --pipe-in
                        appointed
  --pipe-ih PIPE_IN_HEIGHT
                        Height of input raw RGB, effective when --pipe-in
                        appointed
  --pipe-in-fps PIPE_IN_FPS
                        Input stream FPS, effective when --pipe-in appointed
  --pipe-in-pixfmt {rgb24,rgb48be,rgb48le,rgb48}
                        Pixel format of input raw RGB, effective when --pipe-
                        in appointed
  --pipe-rgb            Pipe RGB Raw data to stdout, effective when --pipe-out
                        appointed
  --pipe-colormatrix {470bg,170m,2020ncl,709}
                        Colormatrix for RGB-YUV Conversion, effective when
                        --pipe-in appointed, --pipe-rgb not appointed


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="典型使用场景说明" tabindex="-1"><a class="header-anchor" href="#典型使用场景说明" aria-hidden="true">#</a> 典型使用场景说明</h2><h3 id="多开svfi" tabindex="-1"><a class="header-anchor" href="#多开svfi" aria-hidden="true">#</a> 多开SVFI</h3><p><code>one_line_shot_args.exe</code>（以下简称OLS）程序在完成以上配置后支持多开，用于多进程任务，请注意这可能会造成极大的资源占用。</p><p>有三个必要参数需要输入：</p><ul><li><code>--input</code>: 待进行画质处理的视频文件或图片序列所在文件夹</li><li><code>--config</code>：SVFI GUI程序生成的配置文件，一般位于安装目录的Configs文件夹</li><li><code>--task-id</code>：任务ID，非空的字符串，用于区分不同任务。</li></ul><h3 id="管道输入" tabindex="-1"><a class="header-anchor" href="#管道输入" aria-hidden="true">#</a> 管道输入</h3><p>SVFI支持从其他进程输入RGB流，目前支持<code>rgb24</code>, <code>rgb48</code>, <code>rgb48le</code>, <code>rgb48be</code>四种像素格式的裸流输入。</p><p>必须填写<code>--pipe-in</code>以启用此功能，并另行指定<code>--pipe-iw</code>输入图像像素长，<code>--pipe-ih</code>宽，<code>--pipe-in-fps</code>输入流帧率（仅支持浮点型），<code>--pipe-in-pixfmt</code>输入的像素格式。</p><h3 id="管道输出" tabindex="-1"><a class="header-anchor" href="#管道输出" aria-hidden="true">#</a> 管道输出</h3><p>SVFI支持输出RGB或<code>YUV444P10</code>的Y4M流到<code>stdout</code>中。</p><p>必须填写<code>--pipe-out</code>以启用此功能，</p><ul><li>若需要输出<code>YUV444P10</code>，请指定<code>--pipe-colormatrix</code>用于SVFI进行RGB到YUV流的转换</li><li>若要输出<code>RGB</code>流，请指定<code>--pipe-rgb</code>，具体的输出像素格式由配置文件各选项控制，一般而言开启高精度工作流则输出<code>rgb48</code>，非高精度工作流输出<code>rgb24</code></li></ul><h3 id="命令行示例" tabindex="-1"><a class="header-anchor" href="#命令行示例" aria-hidden="true">#</a> 命令行示例</h3><h4 id="使用ffmpeg进行高精度拆帧并输入svfi进行处理-使用y4m输入ffmpeg进行压制" tabindex="-1"><a class="header-anchor" href="#使用ffmpeg进行高精度拆帧并输入svfi进行处理-使用y4m输入ffmpeg进行压制" aria-hidden="true">#</a> 使用<code>ffmpeg</code>进行高精度拆帧并输入<code>SVFI</code>进行处理，使用<code>Y4M</code>输入<code>ffmpeg</code>进行压制</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ffmpeg <span class="token parameter variable">-loglevel</span> error <span class="token parameter variable">-vsync</span> passthrough <span class="token parameter variable">-hwaccel</span> auto <span class="token parameter variable">-i</span> test/test.mp4 <span class="token parameter variable">-map</span> <span class="token number">0</span>:v:0 <span class="token parameter variable">-sws_flags</span> +bicubic+full_chroma_int+accurate_rnd <span class="token parameter variable">-vf</span> copy,format<span class="token operator">=</span>yuv444p10le,format<span class="token operator">=</span>rgb48be,format<span class="token operator">=</span>rgb24,minterpolate<span class="token operator">=</span>fps<span class="token operator">=</span><span class="token number">24.000</span>:mi_mode<span class="token operator">=</span>dup <span class="token parameter variable">-f</span> image2pipe <span class="token parameter variable">-pix_fmt</span> rgb24 <span class="token parameter variable">-vcodec</span> rawvideo - <span class="token operator">|</span>  one_line_shot_args.exe  <span class="token parameter variable">-i</span> - <span class="token parameter variable">-c</span> Configs/SVFI_Config_pipe_test.ini <span class="token parameter variable">-t</span> pipe_2 --pipe-in --pipe-iw <span class="token number">960</span> --pipe-ih <span class="token number">540</span>  --pipe-in-fps <span class="token number">24</span> --pipe-out <span class="token operator">|</span>  ffmpeg.exe <span class="token parameter variable">-loglevel</span> error <span class="token parameter variable">-hide_banner</span> <span class="token parameter variable">-y</span> <span class="token parameter variable">-vsync</span> cfr <span class="token parameter variable">-i</span> - <span class="token parameter variable">-preset:v</span> slow <span class="token parameter variable">-c:v</span> hevc_nvenc <span class="token parameter variable">-pix_fmt</span> yuv420p <span class="token parameter variable">-crf</span> <span class="token number">16</span> test/output.mp4 <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="使用ffmpeg进行高精度拆帧并输入长度为2的svfi管道进行处理-输出y4m使用ffmpeg进行压制" tabindex="-1"><a class="header-anchor" href="#使用ffmpeg进行高精度拆帧并输入长度为2的svfi管道进行处理-输出y4m使用ffmpeg进行压制" aria-hidden="true">#</a> 使用<code>ffmpeg</code>进行高精度拆帧并输入长度为2的<code>SVFI</code>管道进行处理，输出<code>Y4M</code>使用<code>ffmpeg</code>进行压制</h4><p>第一个OLS进程用于超分，第二个OLS进程用于补帧</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ffmpeg <span class="token parameter variable">-loglevel</span> error <span class="token parameter variable">-vsync</span> passthrough <span class="token parameter variable">-hwaccel</span> auto <span class="token parameter variable">-i</span> test/test.mp4 <span class="token parameter variable">-map</span> <span class="token number">0</span>:v:0 <span class="token parameter variable">-sws_flags</span> +bicubic+full_chroma_int+accurate_rnd <span class="token parameter variable">-vf</span> copy,format<span class="token operator">=</span>yuv444p10le,format<span class="token operator">=</span>rgb48be,format<span class="token operator">=</span>rgb24,minterpolate<span class="token operator">=</span>fps<span class="token operator">=</span><span class="token number">24.000</span>:mi_mode<span class="token operator">=</span>dup <span class="token parameter variable">-f</span> image2pipe <span class="token parameter variable">-pix_fmt</span> rgb48be <span class="token parameter variable">-vcodec</span> rawvideo - <span class="token operator">|</span> one_line_shot_args.exe  <span class="token parameter variable">-i</span> - <span class="token parameter variable">-c</span> Configs/SVFI_Config_pipe_1.ini <span class="token parameter variable">-t</span> pipe_1 --pipe-in --pipe-iw <span class="token number">960</span> --pipe-ih <span class="token number">540</span> --pipe-in-fps <span class="token number">24</span> --pipe-out --pipe-rgb --pipe-in-pixfmt rgb48be <span class="token operator">|</span> one_line_shot_args.exe <span class="token parameter variable">-i</span> - <span class="token parameter variable">-c</span> Configs/SVFI_Config_pipe_2.ini <span class="token parameter variable">-t</span> pipe_2 --pipe-in --pipe-iw <span class="token number">960</span> --pipe-ih <span class="token number">540</span>  --pipe-in-fps <span class="token number">24</span> --pipe-in-pixfmt rgb48 --pipe-out <span class="token operator">|</span>  ffmpeg.exe <span class="token parameter variable">-loglevel</span> error <span class="token parameter variable">-hide_banner</span> <span class="token parameter variable">-y</span> <span class="token parameter variable">-vsync</span> cfr <span class="token parameter variable">-i</span> - <span class="token parameter variable">-preset:v</span> slow <span class="token parameter variable">-c:v</span> hevc_nvenc <span class="token parameter variable">-pix_fmt</span> yuv420p <span class="token parameter variable">-crf</span> <span class="token number">16</span> test/output.mp4 <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="使用vapoursynth对输入进行预处理后由ffmpeg进行高精度拆帧并由svfi管道处理" tabindex="-1"><a class="header-anchor" href="#使用vapoursynth对输入进行预处理后由ffmpeg进行高精度拆帧并由svfi管道处理" aria-hidden="true">#</a> 使用<code>Vapoursynth</code>对输入进行预处理后由<code>ffmpeg</code>进行高精度拆帧并由<code>SVFI</code>管道处理</h4><p>使用的<code>Vapoursynth</code>脚本<code>input.vpy</code>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> vapoursynth <span class="token keyword">as</span> vs
<span class="token keyword">from</span> vapoursynth <span class="token keyword">import</span> core
video <span class="token operator">=</span> core<span class="token punctuation">.</span>lsmas<span class="token punctuation">.</span>LWLibavSource<span class="token punctuation">(</span><span class="token string">r&#39;test.mp4&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 960x540, 24fps</span>

<span class="token comment"># DO SOMETHING</span>

video<span class="token punctuation">.</span>set_output<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># output yuv</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>命令行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vspipe input.vpy <span class="token parameter variable">--y4m</span> - <span class="token operator">|</span> ffmpeg <span class="token parameter variable">-loglevel</span> error <span class="token parameter variable">-vsync</span> passthrough <span class="token parameter variable">-hwaccel</span> auto <span class="token parameter variable">-i</span> - <span class="token parameter variable">-map</span> <span class="token number">0</span>:v:0 <span class="token parameter variable">-sws_flags</span> +bicubic+full_chroma_int+accurate_rnd <span class="token parameter variable">-vf</span> copy,format<span class="token operator">=</span>yuv444p10le,format<span class="token operator">=</span>rgb48be,format<span class="token operator">=</span>rgb24,minterpolate<span class="token operator">=</span>fps<span class="token operator">=</span><span class="token number">24.000</span>:mi_mode<span class="token operator">=</span>dup <span class="token parameter variable">-f</span> image2pipe <span class="token parameter variable">-pix_fmt</span> rgb24 <span class="token parameter variable">-vcodec</span> rawvideo - <span class="token operator">|</span>  one_line_shot_args.exe  <span class="token parameter variable">-i</span> - <span class="token parameter variable">-c</span> Configs/SVFI_Config_pipe_test.ini <span class="token parameter variable">-t</span> pipe_2 --pipe-in --pipe-iw <span class="token number">960</span> --pipe-ih <span class="token number">540</span>  --pipe-in-fps <span class="token number">24</span> --pipe-out <span class="token operator">|</span>  ffmpeg.exe <span class="token parameter variable">-loglevel</span> error <span class="token parameter variable">-hide_banner</span> <span class="token parameter variable">-y</span> <span class="token parameter variable">-vsync</span> cfr <span class="token parameter variable">-i</span> - <span class="token parameter variable">-preset:v</span> slow <span class="token parameter variable">-c:v</span> hevc_nvenc <span class="token parameter variable">-pix_fmt</span> yuv420p <span class="token parameter variable">-crf</span> <span class="token number">16</span> test/output.mp4 <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>先使用SVFI配置任务参数并启动任务后，使用<code>Configs</code>文件夹下生成的<code>Config.ini</code>进行命令行任务</p></div>`,31);function b(u,f){const n=p("RouterLink");return i(),r("div",null,[e("div",d,[v,e("p",null,[a("此页说明属于进阶内容，请优先阅读"),t(n,{to:"/pages/052617/"},{default:o(()=>[a("高级内容详解")]),_:1})])]),m])}const g=s(c,[["render",b],["__file","index.html.vue"]]);export{g as default};
